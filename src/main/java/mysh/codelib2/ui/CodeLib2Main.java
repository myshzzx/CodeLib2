/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mysh.codelib2.ui;

import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.HyperlinkEvent;
import javax.swing.filechooser.FileFilter;
import java.awt.event.MouseEvent;
import java.io.File;

/**
 *
 * @author Allen
 */
public final class CodeLib2Main extends javax.swing.JPanel {

    private UIControllor controllor;
    private AppTitltSetter appTitltSetter;
    private FileFilter zcl2Filter = new FileFilter() {
        @Override
        public boolean accept(File f) {

            if (f.isDirectory() || f.getName().toLowerCase().endsWith(UIControllor.Extention)) {
                return true;
            }
            return false;
        }

        @Override
        public String getDescription() {

            return "*.zcl2 - zzx codelib2 文件";
        }
    };
    private DocumentListener findTextListener = new DocumentListener() {
        @Override
        public void insertUpdate(DocumentEvent e) {
            controllor.findNext();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            controllor.findNext();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
        }
    };

    /**
     * 关闭前询问是否要关闭.
     *
     * @return
     */
    boolean doClose() {
        return this.controllor.doClose();
    }

    public void openFile(File file) {
        this.controllor.openFile(file);
    }

    public static interface AppTitltSetter {

        void setTitle(String title);
    }

    /**
     * Creates new form CodeLib2Main
     */
    public CodeLib2Main() {
        initComponents();

        this.controllor = new UIControllor(this);
    }

    public CodeLib2Main setAppTitleSetter(AppTitltSetter appTitltSetter) {
        this.appTitltSetter = appTitltSetter;
        return this;
    }

    public void setAppTitle(String title) {
        if (this.appTitltSetter != null) {
            this.appTitltSetter.setTitle(title);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        zcl2OpenChooser = new javax.swing.JFileChooser();
        itemExportChooser = new javax.swing.JFileChooser();
        attachmentImportChooser = new javax.swing.JFileChooser();
        attachmentExportChooser = new javax.swing.JFileChooser();
        zcl2ImportChooser = new javax.swing.JFileChooser();
        jToolBar1 = new javax.swing.JToolBar();
        newInst = new javax.swing.JButton();
        open = new javax.swing.JButton();
        save = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        add = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        importButton = new javax.swing.JButton();
        export = new javax.swing.JButton();
        copyToClipboard = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        filterText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultList = new javax.swing.JList();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        keyWordText = new javax.swing.JTextField();
        rTextScrollPane = new javax.swing.JScrollPane();
        codeText = new org.fife.ui.rsyntaxtextarea.RSyntaxTextArea();
        jSplitPane3 = new javax.swing.JSplitPane();
        attachmentToolPanel = new javax.swing.JPanel();
        jToolbar2 = new javax.swing.JToolBar();
        addAttachment = new javax.swing.JButton();
        removeAttachment = new javax.swing.JButton();
        exportAttachment = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        attachmentTable = new javax.swing.JTable();
        statusBar = new javax.swing.JLabel();
        findText = new mysh.ui.JTextFieldWithTips();
        findPreviousBtn = new javax.swing.JButton();
        findNextBtn = new javax.swing.JButton();

        zcl2OpenChooser.setDialogTitle("zcl2 文件");
        zcl2OpenChooser.setFileFilter(this.zcl2Filter);

        itemExportChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        itemExportChooser.setApproveButtonText("导出");
        itemExportChooser.setDialogTitle("导出成什么呢?");
        // 导出选中的节点.
        itemExportChooser.addChoosableFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f) {

                if (f.isDirectory() || f.getName().toLowerCase().endsWith(UIControllor.Extention)) {
                    return true;
                }
                return false;
            }

            @Override
            public String getDescription() {

                return ".zcl2";
            }
        });

        // 导出为网页
        itemExportChooser.addChoosableFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f) {

                if (f.isDirectory() || f.getName().toLowerCase().endsWith(".html")) {
                    return true;
                }
                return false;
            }

            @Override
            public String getDescription() {

                return ".html";
            }
        });

        attachmentImportChooser.setApproveButtonText("导入");
        attachmentImportChooser.setDialogTitle("导入附件");
        attachmentImportChooser.setMultiSelectionEnabled(true);

        attachmentExportChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        attachmentExportChooser.setApproveButtonText("导出");
        attachmentExportChooser.setDialogTitle("导出附件");
        attachmentExportChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        zcl2ImportChooser.setApproveButtonText("导入");
        zcl2ImportChooser.setDialogTitle("选择 zcl2 文件(可多选)");
        zcl2ImportChooser.setMultiSelectionEnabled(true);
        zcl2ImportChooser.setFileFilter(this.zcl2Filter);

        setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        newInst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/new.png"))); // NOI18N
        newInst.setToolTipText("新建");
        newInst.setFocusable(false);
        newInst.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newInst.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newInst.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newInstMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newInstMouseExited(evt);
            }
        });
        newInst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newInstActionPerformed(evt);
            }
        });
        jToolBar1.add(newInst);

        open.setFont(open.getFont());
        open.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/open.png"))); // NOI18N
        open.setToolTipText("打开");
        open.setFocusable(false);
        open.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        open.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        open.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                openMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                openMouseExited(evt);
            }
        });
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });
        jToolBar1.add(open);

        save.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N
        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save.png"))); // NOI18N
        save.setToolTipText("保存 (Ctrl + S)");
        save.setFocusable(false);
        save.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        save.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveMouseExited(evt);
            }
        });
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jToolBar1.add(save);
        jToolBar1.add(jSeparator1);

        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        add.setToolTipText("新增条目");
        add.setFocusable(false);
        add.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        add.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addMouseExited(evt);
            }
        });
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jToolBar1.add(add);

        remove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/remove.png"))); // NOI18N
        remove.setToolTipText("移除条目");
        remove.setFocusable(false);
        remove.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        remove.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        remove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                removeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                removeMouseExited(evt);
            }
        });
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });
        jToolBar1.add(remove);
        jToolBar1.add(jSeparator2);

        importButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/import.png"))); // NOI18N
        importButton.setToolTipText("导入 zcl2 文件, 并去除重复项");
        importButton.setFocusable(false);
        importButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        importButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        importButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                importButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                importButtonMouseExited(evt);
            }
        });
        importButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(importButton);
        importButton.getAccessibleContext().setAccessibleDescription("导入 zcl2 文件, 并去除重复项");

        export.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/export.png"))); // NOI18N
        export.setToolTipText("导出选中条目 | 导出全部");
        export.setFocusable(false);
        export.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        export.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        export.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exportMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exportMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exportMouseExited(evt);
            }
        });
        jToolBar1.add(export);

        copyToClipboard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/copyToClipboard.png"))); // NOI18N
        copyToClipboard.setToolTipText("复制到剪贴板");
        copyToClipboard.setFocusable(false);
        copyToClipboard.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        copyToClipboard.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        copyToClipboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                copyToClipboardMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                copyToClipboardMouseExited(evt);
            }
        });
        copyToClipboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyToClipboardActionPerformed(evt);
            }
        });
        jToolBar1.add(copyToClipboard);

        jSplitPane1.setDividerLocation(330);
        jSplitPane1.setDividerSize(4);
        jSplitPane1.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N

        jPanel1.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N

        filterText.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N
        filterText.setToolTipText("空格或逗号分隔搜索关键字, * 展示全部, ESC 复位");
        filterText.setFocusTraversalPolicyProvider(true);
        filterText.setNextFocusableComponent(resultList);
        filterText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                filterTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                filterTextMouseExited(evt);
            }
        });

        resultList.setModel(new DefaultListModel<>());
        resultList.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N
        resultList.setNextFocusableComponent(findText);
        resultList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                resultListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(resultList);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(filterText)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(filterText, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jSplitPane2.setDividerLocation(450);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane2.setResizeWeight(0.7);

        keyWordText.setEditable(false);
        keyWordText.setFont(new java.awt.Font("Microsoft YaHei", 0, 12)); // NOI18N
        keyWordText.setToolTipText("逗号分隔关键字(尽量小写), 如 java, GUI, tree, 语法高亮将参考第一个关键字");
        keyWordText.setNextFocusableComponent(codeText);
        keyWordText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                keyWordTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                keyWordTextMouseExited(evt);
            }
        });

        rTextScrollPane = new org.fife.ui.rtextarea.RTextScrollPane(codeText, true);
        rTextScrollPane.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        codeText.setLineWrap(true);
        codeText.setEditable(false);
        codeText.setColumns(20);
        codeText.setRows(5);
        codeText.setCodeFoldingEnabled(true);
        codeText.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        codeText.setFractionalFontMetricsEnabled(true);
        codeText.setMargin(new java.awt.Insets(4, 4, 4, 4));
        codeText.setMarkOccurrences(true);
        codeText.setNextFocusableComponent(filterText);
        codeText.setPaintMarkOccurrencesBorder(true);
        codeText.setPaintTabLines(true);
        codeText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                codeTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                codeTextMouseExited(evt);
            }
        });
        codeText.addHyperlinkListener(new javax.swing.event.HyperlinkListener() {
            public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {
                codeTextHyperlinkUpdate(evt);
            }
        });
        rTextScrollPane.setViewportView(codeText);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(keyWordText)
            .addComponent(rTextScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(keyWordText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rTextScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE))
        );

        jSplitPane2.setTopComponent(jPanel2);

        jSplitPane3.setDividerLocation(33);
        jSplitPane3.setDividerSize(0);
        jSplitPane3.setEnabled(false);

        attachmentToolPanel.setLayout(new java.awt.BorderLayout());

        jToolbar2.setFloatable(false);
        jToolbar2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolbar2.setRollover(true);

        addAttachment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/sAdd.png"))); // NOI18N
        addAttachment.setToolTipText("导入附件");
        addAttachment.setFocusable(false);
        addAttachment.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addAttachment.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addAttachment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addAttachmentMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addAttachmentMouseExited(evt);
            }
        });
        addAttachment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAttachmentActionPerformed(evt);
            }
        });
        jToolbar2.add(addAttachment);

        removeAttachment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/sRemove.png"))); // NOI18N
        removeAttachment.setToolTipText("移除附件");
        removeAttachment.setFocusable(false);
        removeAttachment.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeAttachment.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        removeAttachment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                removeAttachmentMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                removeAttachmentMouseExited(evt);
            }
        });
        removeAttachment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAttachmentActionPerformed(evt);
            }
        });
        jToolbar2.add(removeAttachment);

        exportAttachment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/sExport.png"))); // NOI18N
        exportAttachment.setToolTipText("导出附件");
        exportAttachment.setFocusable(false);
        exportAttachment.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exportAttachment.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        exportAttachment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exportAttachmentMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exportAttachmentMouseExited(evt);
            }
        });
        exportAttachment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportAttachmentActionPerformed(evt);
            }
        });
        jToolbar2.add(exportAttachment);

        attachmentToolPanel.add(jToolbar2, java.awt.BorderLayout.NORTH);

        jSplitPane3.setLeftComponent(attachmentToolPanel);

        jScrollPane4.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N

        attachmentTable.setAutoCreateRowSorter(true);
        attachmentTable.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        attachmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "附件名", "附件大小(字节)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        attachmentTable.setToolTipText("附件列表, 双击打开文件");
        attachmentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attachmentTableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                attachmentTableMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                attachmentTableMouseExited(evt);
            }
        });
        jScrollPane4.setViewportView(attachmentTable);

        jSplitPane3.setRightComponent(jScrollPane4);

        jSplitPane2.setRightComponent(jSplitPane3);

        jSplitPane1.setRightComponent(jSplitPane2);

        statusBar.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        statusBar.setText("就绪");
        statusBar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        statusBar.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        findText.setLabel("搜索代码框(正则) (Ctrl + F)");
        findText.getDocument().addDocumentListener(this.findTextListener);
        findText.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        findText.setNextFocusableComponent(keyWordText);
        findText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                findTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                findTextMouseExited(evt);
            }
        });
        findText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findTextActionPerformed(evt);
            }
        });

        findPreviousBtn.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        findPreviousBtn.setText("<");
        findPreviousBtn.setToolTipText("查找上一个");
        findPreviousBtn.setEnabled(false);
        findPreviousBtn.setFocusable(false);
        findPreviousBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                findPreviousBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                findPreviousBtnMouseExited(evt);
            }
        });
        findPreviousBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findPreviousBtnActionPerformed(evt);
            }
        });

        findNextBtn.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        findNextBtn.setText(">");
        findNextBtn.setToolTipText("查找下一个");
        findNextBtn.setEnabled(false);
        findNextBtn.setFocusable(false);
        findNextBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                findNextBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                findNextBtnMouseExited(evt);
            }
        });
        findNextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findNextBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(findPreviousBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(findNextBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(findText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(findText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(findPreviousBtn)
                            .addComponent(findNextBtn))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusBar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void newInstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newInstActionPerformed
        this.controllor.newInst();
    }//GEN-LAST:event_newInstActionPerformed

    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
        this.controllor.open();
    }//GEN-LAST:event_openActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        this.controllor.save();
    }//GEN-LAST:event_saveActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        this.controllor.addItem();
    }//GEN-LAST:event_addActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        this.controllor.removeItem();
    }//GEN-LAST:event_removeActionPerformed

    private void resultListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_resultListValueChanged
        this.controllor.selectItem(this.resultList.getSelectedValue());
    }//GEN-LAST:event_resultListValueChanged

    private void copyToClipboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyToClipboardActionPerformed
        this.controllor.copyContentToClipboard();
    }//GEN-LAST:event_copyToClipboardActionPerformed

    private void codeTextHyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {//GEN-FIRST:event_codeTextHyperlinkUpdate

        if (evt.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
            this.controllor.urlClicked(evt.getURL());
        }
    }//GEN-LAST:event_codeTextHyperlinkUpdate

    private void addAttachmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAttachmentActionPerformed
        this.controllor.addAttachment();
    }//GEN-LAST:event_addAttachmentActionPerformed

    private void removeAttachmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAttachmentActionPerformed
        this.controllor.removeAttachment();
    }//GEN-LAST:event_removeAttachmentActionPerformed

    private void exportAttachmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportAttachmentActionPerformed
        this.controllor.exportAttachment();
    }//GEN-LAST:event_exportAttachmentActionPerformed

    private void keyWordTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_keyWordTextMouseEntered
        this.controllor.setStatusBar(this.keyWordText.getToolTipText());
    }//GEN-LAST:event_keyWordTextMouseEntered

    private void filterTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filterTextMouseEntered
        this.controllor.setStatusBar(this.filterText.getToolTipText());
    }//GEN-LAST:event_filterTextMouseEntered

    private void copyToClipboardMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_copyToClipboardMouseEntered
        this.controllor.setStatusBar(this.copyToClipboard.getToolTipText());
    }//GEN-LAST:event_copyToClipboardMouseEntered

    private void keyWordTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_keyWordTextMouseExited
        this.controllor.setStatusBarReady();
    }//GEN-LAST:event_keyWordTextMouseExited

    private void filterTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filterTextMouseExited
        this.controllor.setStatusBarReady();
    }//GEN-LAST:event_filterTextMouseExited

    private void copyToClipboardMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_copyToClipboardMouseExited
        this.controllor.setStatusBarReady();
    }//GEN-LAST:event_copyToClipboardMouseExited

    private void exportMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportMouseEntered
        this.controllor.setStatusBar(this.export.getToolTipText());
    }//GEN-LAST:event_exportMouseEntered

    private void removeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeMouseEntered
        this.controllor.setStatusBar(this.remove.getToolTipText());
    }//GEN-LAST:event_removeMouseEntered

    private void addMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseEntered
        this.controllor.setStatusBar(this.add.getToolTipText());
    }//GEN-LAST:event_addMouseEntered

    private void saveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseEntered
        this.controllor.setStatusBar(this.save.getToolTipText());
    }//GEN-LAST:event_saveMouseEntered

    private void openMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openMouseEntered
        this.controllor.setStatusBar(this.open.getToolTipText());
    }//GEN-LAST:event_openMouseEntered

    private void newInstMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newInstMouseEntered
        this.controllor.setStatusBar(this.newInst.getToolTipText());
    }//GEN-LAST:event_newInstMouseEntered

    private void codeTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_codeTextMouseEntered
        this.controllor.setStatusBar("eclipse 有哪些快捷键呢?");
    }//GEN-LAST:event_codeTextMouseEntered

    private void addAttachmentMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAttachmentMouseEntered
        this.controllor.setStatusBar(this.addAttachment.getToolTipText());
    }//GEN-LAST:event_addAttachmentMouseEntered

    private void removeAttachmentMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeAttachmentMouseEntered
        this.controllor.setStatusBar(this.removeAttachment.getToolTipText());
    }//GEN-LAST:event_removeAttachmentMouseEntered

    private void exportAttachmentMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportAttachmentMouseEntered
        this.controllor.setStatusBar(this.exportAttachment.getToolTipText());
    }//GEN-LAST:event_exportAttachmentMouseEntered

    private void newInstMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newInstMouseExited
        this.controllor.setStatusBarReady();
    }//GEN-LAST:event_newInstMouseExited

    private void openMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openMouseExited
        this.controllor.setStatusBarReady();
    }//GEN-LAST:event_openMouseExited

    private void saveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseExited
        this.controllor.setStatusBarReady();
    }//GEN-LAST:event_saveMouseExited

    private void addMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseExited
        this.controllor.setStatusBarReady();
    }//GEN-LAST:event_addMouseExited

    private void removeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeMouseExited
        this.controllor.setStatusBarReady();
    }//GEN-LAST:event_removeMouseExited

    private void exportMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportMouseExited
        this.controllor.setStatusBarReady();
    }//GEN-LAST:event_exportMouseExited

    private void codeTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_codeTextMouseExited
        this.controllor.setStatusBarReady();
    }//GEN-LAST:event_codeTextMouseExited

    private void addAttachmentMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAttachmentMouseExited
        this.controllor.setStatusBarReady();
    }//GEN-LAST:event_addAttachmentMouseExited

    private void removeAttachmentMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeAttachmentMouseExited
        this.controllor.setStatusBarReady();
    }//GEN-LAST:event_removeAttachmentMouseExited

    private void exportAttachmentMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportAttachmentMouseExited
        this.controllor.setStatusBarReady();
    }//GEN-LAST:event_exportAttachmentMouseExited

    private void attachmentTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attachmentTableMouseEntered
        this.controllor.setStatusBar(this.attachmentTable.getToolTipText());
    }//GEN-LAST:event_attachmentTableMouseEntered

    private void attachmentTableMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attachmentTableMouseExited
        this.controllor.setStatusBarReady();
    }//GEN-LAST:event_attachmentTableMouseExited

    private void importButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importButtonActionPerformed
        this.controllor.importZcl2();
    }//GEN-LAST:event_importButtonActionPerformed

    private void importButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importButtonMouseEntered
        this.controllor.setStatusBar(this.importButton.getToolTipText());
    }//GEN-LAST:event_importButtonMouseEntered

    private void importButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importButtonMouseExited
        this.controllor.setStatusBarReady();
    }//GEN-LAST:event_importButtonMouseExited

    private void findTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findTextActionPerformed
        this.controllor.findNext();
    }//GEN-LAST:event_findTextActionPerformed

    private void findPreviousBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findPreviousBtnActionPerformed
        this.controllor.findPrevious();
    }//GEN-LAST:event_findPreviousBtnActionPerformed

    private void findNextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findNextBtnActionPerformed
        this.controllor.findNext();
    }//GEN-LAST:event_findNextBtnActionPerformed

    private void findPreviousBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findPreviousBtnMouseEntered
        this.controllor.setStatusBar(this.findPreviousBtn.getToolTipText());
    }//GEN-LAST:event_findPreviousBtnMouseEntered

    private void findNextBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findNextBtnMouseEntered
        this.controllor.setStatusBar(this.findNextBtn.getToolTipText());
    }//GEN-LAST:event_findNextBtnMouseEntered

    private void findTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findTextMouseEntered
        this.controllor.setStatusBar(this.findText.getToolTipText());
    }//GEN-LAST:event_findTextMouseEntered

    private void findPreviousBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findPreviousBtnMouseExited
        this.controllor.setStatusBarReady();
    }//GEN-LAST:event_findPreviousBtnMouseExited

    private void findNextBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findNextBtnMouseExited
        this.controllor.setStatusBarReady();
    }//GEN-LAST:event_findNextBtnMouseExited

    private void findTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findTextMouseExited
        this.controllor.setStatusBarReady();
    }//GEN-LAST:event_findTextMouseExited

    private void attachmentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attachmentTableMouseClicked
        if (evt.getClickCount() == 2) {
            this.controllor.openAttachment();
        }
    }//GEN-LAST:event_attachmentTableMouseClicked

    private void exportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportMouseClicked
        switch (evt.getButton()) {
            case MouseEvent.BUTTON1:
                this.controllor.export(1);
                break;
            case MouseEvent.BUTTON3:
                this.controllor.export(0);
                break;
        }
    }//GEN-LAST:event_exportMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton addAttachment;
    javax.swing.JFileChooser attachmentExportChooser;
    javax.swing.JFileChooser attachmentImportChooser;
    javax.swing.JTable attachmentTable;
    private javax.swing.JPanel attachmentToolPanel;
    org.fife.ui.rsyntaxtextarea.RSyntaxTextArea codeText;
    private javax.swing.JButton copyToClipboard;
    private javax.swing.JButton export;
    private javax.swing.JButton exportAttachment;
    javax.swing.JTextField filterText;
    javax.swing.JButton findNextBtn;
    javax.swing.JButton findPreviousBtn;
    mysh.ui.JTextFieldWithTips findText;
    private javax.swing.JButton importButton;
    javax.swing.JFileChooser itemExportChooser;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolbar2;
    javax.swing.JTextField keyWordText;
    private javax.swing.JButton newInst;
    private javax.swing.JButton open;
    private javax.swing.JScrollPane rTextScrollPane;
    private javax.swing.JButton remove;
    private javax.swing.JButton removeAttachment;
    javax.swing.JList resultList;
    private javax.swing.JButton save;
    javax.swing.JLabel statusBar;
    javax.swing.JFileChooser zcl2ImportChooser;
    javax.swing.JFileChooser zcl2OpenChooser;
    // End of variables declaration//GEN-END:variables
}
